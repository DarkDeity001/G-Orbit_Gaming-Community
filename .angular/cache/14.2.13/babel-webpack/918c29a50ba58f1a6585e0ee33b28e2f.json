{"ast":null,"code":"import _asyncToGenerator from \"D:/Gamer`s Orbit/clips/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { switchMap, map } from 'rxjs/operators';\nimport { of, combineLatest } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nimport * as i2 from \"@angular/fire/compat/auth\";\nimport * as i3 from \"@angular/fire/compat/storage\";\nexport class ClipService {\n  constructor(db, auth, storage) {\n    this.db = db;\n    this.auth = auth;\n    this.storage = storage;\n    this.clipsCollection = db.collection('clips');\n  }\n  createClip(data) {\n    return this.clipsCollection.add(data);\n  }\n  getUserClips(sort$) {\n    return combineLatest([this.auth.user, sort$]).pipe(switchMap(values => {\n      const [user, sort] = values;\n      if (!user) {\n        return of([]);\n      }\n      const query = this.clipsCollection.ref.where('uid', '==', user.uid).orderBy('timestamp', sort === '1' ? 'desc' : 'asc');\n      return query.get();\n    }), map(snapshot => snapshot.docs));\n  }\n  updateClip(id, title) {\n    return this.clipsCollection.doc(id).update({\n      title\n    });\n  }\n  deleteClip(clip) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const clipRef = _this.storage.ref(`clips/${clip.fileName}`);\n      yield clipRef.delete();\n      yield _this.clipsCollection.doc(clip.docID).delete();\n    })();\n  }\n}\nClipService.ɵfac = function ClipService_Factory(t) {\n  return new (t || ClipService)(i0.ɵɵinject(i1.AngularFirestore), i0.ɵɵinject(i2.AngularFireAuth), i0.ɵɵinject(i3.AngularFireStorage));\n};\nClipService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ClipService,\n  factory: ClipService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["switchMap","map","of","combineLatest","ClipService","constructor","db","auth","storage","clipsCollection","collection","createClip","data","add","getUserClips","sort$","user","pipe","values","sort","query","ref","where","uid","orderBy","get","snapshot","docs","updateClip","id","title","doc","update","deleteClip","clip","_this","_asyncToGenerator","clipRef","fileName","delete","docID","i0","ɵɵinject","i1","AngularFirestore","i2","AngularFireAuth","i3","AngularFireStorage","factory","ɵfac","providedIn"],"sources":["D:\\Gamer`s Orbit\\clips\\src\\app\\services\\clip.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { \n  AngularFirestore, AngularFirestoreCollection, DocumentReference, \n  QuerySnapshot\n} from '@angular/fire/compat/firestore'\nimport IClip from '../models/clip.model';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { switchMap, map } from 'rxjs/operators';\nimport { of, BehaviorSubject, combineLatest } from 'rxjs';\nimport { AngularFireStorage } from '@angular/fire/compat/storage'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClipService {\n  public clipsCollection: AngularFirestoreCollection<IClip>\n\n  constructor(\n    private db: AngularFirestore,\n    private auth: AngularFireAuth,\n    private storage: AngularFireStorage\n  ) { \n    this.clipsCollection = db.collection('clips')\n  }\n\n  createClip(data: IClip) : Promise<DocumentReference<IClip>> {\n    return this.clipsCollection.add(data)\n  }\n\n  getUserClips(sort$: BehaviorSubject<string>) {\n    return combineLatest([\n      this.auth.user,\n      sort$\n    ]).pipe(\n      switchMap(values => {\n        const [user, sort] = values\n        \n        if(!user) {\n          return of([])\n        }\n\n        const query = this.clipsCollection.ref.where(\n          'uid', '==', user.uid\n        ).orderBy(\n          'timestamp',\n          sort === '1' ? 'desc' : 'asc'\n        )\n\n        return query.get()\n      }),\n      map(snapshot => (snapshot as QuerySnapshot<IClip>).docs)\n    )\n  }\n\n  updateClip(id: string, title: string) {\n    return this.clipsCollection.doc(id).update({\n      title\n    })\n  }\n\n  async deleteClip(clip: IClip) {\n    const clipRef = this.storage.ref(`clips/${clip.fileName}`)\n\n    await clipRef.delete()\n\n    await this.clipsCollection.doc(clip.docID).delete()\n  }\n}\n"],"mappings":";AAOA,SAASA,SAAS,EAAEC,GAAG,QAAQ,gBAAgB;AAC/C,SAASC,EAAE,EAAmBC,aAAa,QAAQ,MAAM;;;;;AAMzD,OAAM,MAAOC,WAAW;EAGtBC,YACUC,EAAoB,EACpBC,IAAqB,EACrBC,OAA2B;IAF3B,KAAAF,EAAE,GAAFA,EAAE;IACF,KAAAC,IAAI,GAAJA,IAAI;IACJ,KAAAC,OAAO,GAAPA,OAAO;IAEf,IAAI,CAACC,eAAe,GAAGH,EAAE,CAACI,UAAU,CAAC,OAAO,CAAC;EAC/C;EAEAC,UAAUA,CAACC,IAAW;IACpB,OAAO,IAAI,CAACH,eAAe,CAACI,GAAG,CAACD,IAAI,CAAC;EACvC;EAEAE,YAAYA,CAACC,KAA8B;IACzC,OAAOZ,aAAa,CAAC,CACnB,IAAI,CAACI,IAAI,CAACS,IAAI,EACdD,KAAK,CACN,CAAC,CAACE,IAAI,CACLjB,SAAS,CAACkB,MAAM,IAAG;MACjB,MAAM,CAACF,IAAI,EAAEG,IAAI,CAAC,GAAGD,MAAM;MAE3B,IAAG,CAACF,IAAI,EAAE;QACR,OAAOd,EAAE,CAAC,EAAE,CAAC;;MAGf,MAAMkB,KAAK,GAAG,IAAI,CAACX,eAAe,CAACY,GAAG,CAACC,KAAK,CAC1C,KAAK,EAAE,IAAI,EAAEN,IAAI,CAACO,GAAG,CACtB,CAACC,OAAO,CACP,WAAW,EACXL,IAAI,KAAK,GAAG,GAAG,MAAM,GAAG,KAAK,CAC9B;MAED,OAAOC,KAAK,CAACK,GAAG,EAAE;IACpB,CAAC,CAAC,EACFxB,GAAG,CAACyB,QAAQ,IAAKA,QAAiC,CAACC,IAAI,CAAC,CACzD;EACH;EAEAC,UAAUA,CAACC,EAAU,EAAEC,KAAa;IAClC,OAAO,IAAI,CAACrB,eAAe,CAACsB,GAAG,CAACF,EAAE,CAAC,CAACG,MAAM,CAAC;MACzCF;KACD,CAAC;EACJ;EAEMG,UAAUA,CAACC,IAAW;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAC1B,MAAMC,OAAO,GAAGF,KAAI,CAAC3B,OAAO,CAACa,GAAG,CAAC,SAASa,IAAI,CAACI,QAAQ,EAAE,CAAC;MAE1D,MAAMD,OAAO,CAACE,MAAM,EAAE;MAEtB,MAAMJ,KAAI,CAAC1B,eAAe,CAACsB,GAAG,CAACG,IAAI,CAACM,KAAK,CAAC,CAACD,MAAM,EAAE;IAAA;EACrD;;;mBApDWnC,WAAW,EAAAqC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,gBAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,eAAA,GAAAL,EAAA,CAAAC,QAAA,CAAAK,EAAA,CAAAC,kBAAA;AAAA;;SAAX5C,WAAW;EAAA6C,OAAA,EAAX7C,WAAW,CAAA8C,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module"}