{"ast":null,"code":"import _asyncToGenerator from \"D:/Gamer`s Orbit/clips/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Observable } from 'rxjs';\nimport { delay, map, filter } from 'rxjs/operators';\nimport { NavigationEnd } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nimport * as i2 from \"@angular/fire/compat/firestore\";\nimport * as i3 from \"@angular/router\";\nexport class AuthService {\n  constructor(auth, db, router, route) {\n    this.auth = auth;\n    this.db = db;\n    this.router = router;\n    this.route = route;\n    this.redirect = false;\n    this.usersCollection = db.collection('users'); // Use a custom interface for route data\n\n    this.isAuthenticated$ = auth.user.pipe(map(user => !!user));\n    this.isAuthenticatedWithDelay$ = this.isAuthenticated$.pipe(delay(1000)); // Use route.data to access route-specific data\n\n    this.router.events.pipe(filter(e => e instanceof NavigationEnd), map(() => {\n      var _a;\n\n      return ((_a = this.route.snapshot.firstChild) === null || _a === void 0 ? void 0 : _a.data) || {\n        authOnly: false\n      };\n    })).subscribe(data => {\n      this.redirect = data.authOnly || false;\n    });\n  }\n\n  createUser(userData) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (!userData.password) {\n        throw new Error(\"Password not provided!\");\n      }\n\n      const userCred = yield _this.auth.createUserWithEmailAndPassword(userData.email, userData.password);\n\n      if (!userCred.user) {\n        throw new Error(\"User can't be found\");\n      } // Use async/await to set user data and update profile\n\n\n      try {\n        yield _this.usersCollection.doc(userCred.user.uid).set({\n          name: userData.name,\n          email: userData.email,\n          age: userData.age,\n          phoneNumber: userData.phoneNumber\n        });\n        yield userCred.user.updateProfile({\n          displayName: userData.name\n        });\n      } catch (error) {\n        throw new Error(\"Error while updating user data or profile.\");\n      }\n    })();\n  }\n\n  logout($event) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      if ($event) {\n        $event.preventDefault();\n      }\n\n      yield _this2.auth.signOut();\n\n      if (_this2.redirect) {\n        yield _this2.router.navigateByUrl('/');\n      }\n    })();\n  }\n\n}\n\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.AngularFireAuth), i0.ɵɵinject(i2.AngularFirestore), i0.ɵɵinject(i3.Router), i0.ɵɵinject(i3.ActivatedRoute));\n};\n\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAGA,SAASA,UAAT,QAA+B,MAA/B;AAEA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,MAArB,QAA8C,gBAA9C;AACA,SAAiCC,aAAjC,QAA4D,iBAA5D;;;;;AAKA,OAAM,MAAOC,WAAP,CAAkB;EAMtBC,YACUC,IADV,EAEUC,EAFV,EAGUC,MAHV,EAIUC,KAJV,EAI+B;IAHrB;IACA;IACA;IACA;IANF,gBAAW,KAAX;IAQN,KAAKC,eAAL,GAAuBH,EAAE,CAACI,UAAH,CAAc,OAAd,CAAvB,CAF6B,CAI7B;;IACA,KAAKC,gBAAL,GAAwBN,IAAI,CAACO,IAAL,CAAUC,IAAV,CACtBb,GAAG,CAACY,IAAI,IAAI,CAAC,CAACA,IAAX,CADmB,CAAxB;IAIA,KAAKE,yBAAL,GAAiC,KAAKH,gBAAL,CAAsBE,IAAtB,CAC/Bd,KAAK,CAAC,IAAD,CAD0B,CAAjC,CAT6B,CAa7B;;IACA,KAAKQ,MAAL,CAAYQ,MAAZ,CAAmBF,IAAnB,CACEZ,MAAM,CAACe,CAAC,IAAIA,CAAC,YAAYd,aAAnB,CADR,EAEEF,GAAG,CAAC,MAAK;MAAA;;MAAC,mBAAKQ,KAAL,CAAWS,QAAX,CAAoBC,UAApB,MAA8B,IAA9B,IAA8BC,aAA9B,GAA8B,MAA9B,GAA8BA,GAAEC,IAAhC,KAAgD;QAAEC,QAAQ,EAAE;MAAZ,CAAhD;IAAmE,CAA1E,CAFL,EAGEC,SAHF,CAGYF,IAAI,IAAG;MACjB,KAAKG,QAAL,GAAgBH,IAAI,CAACC,QAAL,IAAiB,KAAjC;IACD,CALD;EAMD;;EAEYG,UAAU,CAACC,QAAD,EAAgB;IAAA;;IAAA;MACrC,IAAI,CAACA,QAAQ,CAACC,QAAd,EAAwB;QACtB,MAAM,IAAIC,KAAJ,CAAU,wBAAV,CAAN;MACD;;MAED,MAAMC,QAAQ,SAAS,KAAI,CAACvB,IAAL,CAAUwB,8BAAV,CACrBJ,QAAQ,CAACK,KADY,EACLL,QAAQ,CAACC,QADJ,CAAvB;;MAIA,IAAI,CAACE,QAAQ,CAAChB,IAAd,EAAoB;QAClB,MAAM,IAAIe,KAAJ,CAAU,qBAAV,CAAN;MACD,CAXoC,CAarC;;;MACA,IAAI;QACF,MAAM,KAAI,CAAClB,eAAL,CAAqBsB,GAArB,CAAyBH,QAAQ,CAAChB,IAAT,CAAcoB,GAAvC,EAA4CC,GAA5C,CAAgD;UACpDC,IAAI,EAAET,QAAQ,CAACS,IADqC;UAEpDJ,KAAK,EAAEL,QAAQ,CAACK,KAFoC;UAGpDK,GAAG,EAAEV,QAAQ,CAACU,GAHsC;UAIpDC,WAAW,EAAEX,QAAQ,CAACW;QAJ8B,CAAhD,CAAN;QAOA,MAAMR,QAAQ,CAAChB,IAAT,CAAcyB,aAAd,CAA4B;UAChCC,WAAW,EAAEb,QAAQ,CAACS;QADU,CAA5B,CAAN;MAGD,CAXD,CAWE,OAAOK,KAAP,EAAc;QACd,MAAM,IAAIZ,KAAJ,CAAU,4CAAV,CAAN;MACD;IA3BoC;EA4BtC;;EAEYa,MAAM,CAACC,MAAD,EAAe;IAAA;;IAAA;MAChC,IAAIA,MAAJ,EAAY;QACVA,MAAM,CAACC,cAAP;MACD;;MAED,MAAM,MAAI,CAACrC,IAAL,CAAUsC,OAAV,EAAN;;MAEA,IAAI,MAAI,CAACpB,QAAT,EAAmB;QACjB,MAAM,MAAI,CAAChB,MAAL,CAAYqC,aAAZ,CAA0B,GAA1B,CAAN;MACD;IAT+B;EAUjC;;AAxEqB;;;mBAAXzC,aAAW0C;AAAA;;;SAAX1C;EAAW2C,SAAX3C,WAAW;EAAA4C,YAFV","names":["Observable","delay","map","filter","NavigationEnd","AuthService","constructor","auth","db","router","route","usersCollection","collection","isAuthenticated$","user","pipe","isAuthenticatedWithDelay$","events","e","snapshot","firstChild","_a","data","authOnly","subscribe","redirect","createUser","userData","password","Error","userCred","createUserWithEmailAndPassword","email","doc","uid","set","name","age","phoneNumber","updateProfile","displayName","error","logout","$event","preventDefault","signOut","navigateByUrl","i0","factory","providedIn"],"sourceRoot":"","sources":["D:\\Gamer`s Orbit\\clips\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/compat/firestore';\nimport { Observable, of } from 'rxjs';\nimport IUser from '../models/user.model';\nimport { delay, map, filter, switchMap } from 'rxjs/operators'\nimport { Router, ActivatedRoute, NavigationEnd, Data } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private usersCollection: AngularFirestoreCollection<IUser>;\n  public isAuthenticated$: Observable<boolean>;\n  public isAuthenticatedWithDelay$: Observable<boolean>;\n  private redirect = false;\n\n  constructor(\n    private auth: AngularFireAuth,\n    private db: AngularFirestore,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n    this.usersCollection = db.collection('users');\n\n    // Use a custom interface for route data\n    this.isAuthenticated$ = auth.user.pipe(\n      map(user => !!user)\n    );\n\n    this.isAuthenticatedWithDelay$ = this.isAuthenticated$.pipe(\n      delay(1000)\n    );\n\n    // Use route.data to access route-specific data\n    this.router.events.pipe(\n      filter(e => e instanceof NavigationEnd),\n      map(() => this.route.snapshot.firstChild?.data as Data || { authOnly: false })\n    ).subscribe(data => {\n      this.redirect = data.authOnly || false;\n    });\n  }\n\n  public async createUser(userData: IUser) {\n    if (!userData.password) {\n      throw new Error(\"Password not provided!\");\n    }\n\n    const userCred = await this.auth.createUserWithEmailAndPassword(\n      userData.email, userData.password\n    );\n\n    if (!userCred.user) {\n      throw new Error(\"User can't be found\");\n    }\n\n    // Use async/await to set user data and update profile\n    try {\n      await this.usersCollection.doc(userCred.user.uid).set({\n        name: userData.name,\n        email: userData.email,\n        age: userData.age,\n        phoneNumber: userData.phoneNumber\n      });\n\n      await userCred.user.updateProfile({\n        displayName: userData.name\n      });\n    } catch (error) {\n      throw new Error(\"Error while updating user data or profile.\");\n    }\n  }\n\n  public async logout($event?: Event) {\n    if ($event) {\n      $event.preventDefault();\n    }\n\n    await this.auth.signOut();\n\n    if (this.redirect) {\n      await this.router.navigateByUrl('/');\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}