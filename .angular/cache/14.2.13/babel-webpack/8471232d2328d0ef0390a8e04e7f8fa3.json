{"ast":null,"code":"import _asyncToGenerator from \"D:/Gamer`s Orbit/clips/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/modal.service\";\nimport * as i2 from \"src/app/services/clip.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../../shared/modal/modal.component\";\nimport * as i5 from \"../../shared/input/input.component\";\nimport * as i6 from \"../../shared/alert/alert.component\";\nimport * as i7 from \"@angular/forms\";\n\nfunction EditComponent_app_alert_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"app-alert\", 9)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"color\", ctx_r0.alertColor);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.alertMsg);\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    \"opacity-50\": a0,\n    \"hover:bg-indigo-700\": a1\n  };\n};\n\nexport class EditComponent {\n  constructor(modal, clipService) {\n    this.modal = modal;\n    this.clipService = clipService;\n    this.activeClip = null;\n    this.inSubmission = false;\n    this.showAlert = false;\n    this.alertColor = 'blue';\n    this.alertMsg = 'Please wait! Updating clip.';\n    this.update = new EventEmitter();\n    this.clipID = new FormControl('', {\n      nonNullable: true\n    });\n    this.title = new FormControl('', {\n      validators: [Validators.required, Validators.minLength(3)],\n      nonNullable: true\n    });\n    this.editForm = new FormGroup({\n      title: this.title,\n      id: this.clipID\n    });\n  }\n\n  ngOnInit() {\n    this.modal.register('editClip');\n  }\n\n  ngOnDestroy() {\n    this.modal.unregister('editClip');\n  }\n\n  ngOnChanges() {\n    if (!this.activeClip) {\n      return;\n    }\n\n    this.inSubmission = false;\n    this.showAlert = false;\n\n    if (this.activeClip.docID !== undefined) {\n      this.clipID.setValue(this.activeClip.docID);\n    }\n\n    this.title.setValue(this.activeClip.title);\n  }\n\n  submit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (!_this.activeClip) {\n        return;\n      }\n\n      _this.inSubmission = true;\n      _this.showAlert = true;\n      _this.alertColor = 'blue';\n      _this.alertMsg = 'Please wait! Updating clip.';\n\n      try {\n        yield _this.clipService.updateClip(_this.clipID.value, _this.title.value);\n      } catch (e) {\n        _this.inSubmission = false;\n        _this.alertColor = 'red';\n        _this.alertMsg = 'Something went wrong. Try again later';\n        return;\n      }\n\n      _this.activeClip.title = _this.title.value;\n\n      _this.update.emit(_this.activeClip);\n\n      _this.inSubmission = false;\n      _this.alertColor = 'green';\n      _this.alertMsg = 'Success!';\n    })();\n  }\n\n}\n\nEditComponent.ɵfac = function EditComponent_Factory(t) {\n  return new (t || EditComponent)(i0.ɵɵdirectiveInject(i1.ModalService), i0.ɵɵdirectiveInject(i2.ClipService));\n};\n\nEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditComponent,\n  selectors: [[\"app-edit\"]],\n  inputs: {\n    activeClip: \"activeClip\"\n  },\n  outputs: {\n    update: \"update\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 12,\n  vars: 8,\n  consts: [[\"modalID\", \"editClip\"], [\"heading\", \"\", 1, \"text-2xl\", \"font-bold\"], [3, \"color\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mt-4\"], [1, \"block\", \"text-xl\", \"mb-4\"], [\"placeholder\", \"Enter Title\", 3, \"control\"], [1, \"mt-4\", \"text-right\"], [\"type\", \"submit\", 1, \"inline-flex\", \"justify-center\", \"py-2\", \"px-4\", \"border\", \"border-transparent\", \"shadow-sm\", \"rounded-md\", \"text-white\", \"bg-indigo-600\", \"focus:outline-none\", 3, \"disabled\", \"ngClass\"], [3, \"color\"]],\n  template: function EditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"app-modal\", 0)(1, \"p\", 1);\n      i0.ɵɵtext(2, \"Edit Video\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, EditComponent_app_alert_3_Template, 3, 2, \"app-alert\", 2);\n      i0.ɵɵelementStart(4, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function EditComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n      i0.ɵɵtext(7, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"app-input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 7)(10, \"button\", 8);\n      i0.ɵɵtext(11, \" Update \");\n      i0.ɵɵelementEnd()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.showAlert);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.editForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"control\", ctx.title);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.inSubmission)(\"ngClass\", i0.ɵɵpureFunction2(5, _c0, ctx.inSubmission, !ctx.inSubmission));\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgIf, i4.ModalComponent, i5.InputComponent, i6.AlertComponent, i7.ɵNgNoValidate, i7.NgControlStatusGroup, i7.FormGroupDirective],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlZGl0LmNvbXBvbmVudC5jc3MifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["EventEmitter","FormControl","FormGroup","Validators","i0","EditComponent","constructor","modal","clipService","nonNullable","validators","required","minLength","title","id","clipID","ngOnInit","register","ngOnDestroy","unregister","ngOnChanges","activeClip","inSubmission","showAlert","docID","undefined","setValue","submit","alertColor","alertMsg","updateClip","value","e","update","emit","selectors","inputs","outputs","features","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Gamer`s Orbit\\clips\\src\\app\\video\\edit\\edit.component.ts","D:\\Gamer`s Orbit\\clips\\src\\app\\video\\edit\\edit.component.html"],"sourcesContent":["import {\n  Component, OnInit, OnDestroy, Input, OnChanges, Output,\n  EventEmitter\n} from '@angular/core';\nimport { ModalService } from 'src/app/services/modal.service';\nimport IClip from 'src/app/models/clip.model';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ClipService } from 'src/app/services/clip.service';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit, OnDestroy, OnChanges {\n  @Input() activeClip: IClip | null = null\n  inSubmission = false\n  showAlert = false\n  alertColor = 'blue'\n  alertMsg = 'Please wait! Updating clip.'\n  @Output() update = new EventEmitter()\n\n  clipID = new FormControl('', {\n    nonNullable: true\n  })\n  title = new FormControl('', {\n    validators: [\n      Validators.required,\n      Validators.minLength(3)\n    ],\n    nonNullable: true\n  })\n  editForm = new FormGroup({\n    title: this.title,\n    id: this.clipID\n  })\n\n  constructor(\n    private modal: ModalService,\n    private clipService: ClipService\n  ) { }\n\n  ngOnInit(): void {\n    this.modal.register('editClip')\n  }\n\n  ngOnDestroy() {\n    this.modal.unregister('editClip')\n  }\n\n  ngOnChanges() {\n    if(!this.activeClip) {\n      return\n    }\n\n    this.inSubmission = false\n    this.showAlert = false\n    if (this.activeClip.docID !== undefined) {\n      this.clipID.setValue(this.activeClip.docID);\n  }\n      this.title.setValue(this.activeClip.title)\n  }\n\n  async submit() {\n    if(!this.activeClip) {\n      return\n    }\n\n    this.inSubmission = true\n    this.showAlert = true\n    this.alertColor = 'blue'\n    this.alertMsg = 'Please wait! Updating clip.'\n\n    try {\n      await this.clipService.updateClip(\n        this.clipID.value, this.title.value\n      )\n    }\n    catch(e) {\n      this.inSubmission = false\n      this.alertColor = 'red'\n      this.alertMsg = 'Something went wrong. Try again later'\n      return\n    }\n\n    this.activeClip.title = this.title.value\n    this.update.emit(this.activeClip)\n\n    this.inSubmission = false\n    this.alertColor = 'green'\n    this.alertMsg = 'Success!'\n  }\n\n}\n","<!-- Edit Modal -->\n<app-modal modalID=\"editClip\">\n  <p class=\"text-2xl font-bold\" heading>Edit Video</p>\n\n  <app-alert *ngIf=\"showAlert\" [color]=\"alertColor\">\n    <p>{{ alertMsg }}</p>\n  </app-alert>\n\n  <!-- Form -->\n  <form [formGroup]=\"editForm\" (ngSubmit)=\"submit()\">\n    <!-- Title -->\n    <div class=\"mt-4\">\n      <label class=\"block text-xl mb-4\">Title</label>\n      <app-input [control]=\"title\" \n        placeholder=\"Enter Title\"></app-input>\n    </div>\n\n    <div class=\"mt-4 text-right\">\n      <button [disabled]=\"inSubmission\"\n        [ngClass]=\"{\n          'opacity-50': inSubmission,\n          'hover:bg-indigo-700': !inSubmission\n        }\"\n        type=\"submit\" \n        class=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm rounded-md text-white bg-indigo-600 focus:outline-none\">\n        Update\n      </button>\n    </div>\n  </form>\n</app-modal>"]},"metadata":{},"sourceType":"module"}