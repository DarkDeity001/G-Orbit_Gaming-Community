{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport * as i1 from '@angular/router';\nimport { of, pipe } from 'rxjs';\nimport { map, take, switchMap } from 'rxjs/operators';\nimport * as i2 from '@angular/fire/compat/auth';\nimport firebase from 'firebase/compat/app';\nimport { VERSION } from '@angular/fire';\nconst loggedIn = map(user => !!user);\nclass AngularFireAuthGuard {\n  constructor(router, auth) {\n    this.router = router;\n    this.auth = auth;\n    this.canActivate = (next, state) => {\n      const authPipeFactory = next.data.authGuardPipe || (() => loggedIn);\n      return this.auth.user.pipe(take(1), authPipeFactory(next, state), map(can => {\n        if (typeof can === 'boolean') {\n          return can;\n        } else if (Array.isArray(can)) {\n          return this.router.createUrlTree(can);\n        } else {\n          // TODO(EdricChan03): Add tests\n          return this.router.parseUrl(can);\n        }\n      }));\n    };\n  }\n}\nAngularFireAuthGuard.ɵfac = function AngularFireAuthGuard_Factory(t) {\n  return new (t || AngularFireAuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AngularFireAuth));\n};\nAngularFireAuthGuard.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: AngularFireAuthGuard,\n  factory: AngularFireAuthGuard.ɵfac,\n  providedIn: 'any'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularFireAuthGuard, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'any'\n    }]\n  }], function () {\n    return [{\n      type: i1.Router\n    }, {\n      type: i2.AngularFireAuth\n    }];\n  }, null);\n})();\nconst canActivate = pipe => ({\n  canActivate: [AngularFireAuthGuard],\n  data: {\n    authGuardPipe: pipe\n  }\n});\nconst isNotAnonymous = map(user => !!user && !user.isAnonymous);\nconst idTokenResult = switchMap(user => user ? user.getIdTokenResult() : of(null));\nconst emailVerified = map(user => !!user && user.emailVerified);\nconst customClaims = pipe(idTokenResult, map(idTokenResult => idTokenResult ? idTokenResult.claims : []));\nconst hasCustomClaim = claim => pipe(customClaims, map(claims => claims.hasOwnProperty(claim)));\nconst redirectUnauthorizedTo = redirect => pipe(loggedIn, map(loggedIn => loggedIn || redirect));\nconst redirectLoggedInTo = redirect => pipe(loggedIn, map(loggedIn => loggedIn && redirect || true));\nclass AngularFireAuthGuardModule {\n  constructor() {\n    firebase.registerVersion('angularfire', VERSION.full, 'auth-guard-compat');\n  }\n}\nAngularFireAuthGuardModule.ɵfac = function AngularFireAuthGuardModule_Factory(t) {\n  return new (t || AngularFireAuthGuardModule)();\n};\nAngularFireAuthGuardModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AngularFireAuthGuardModule\n});\nAngularFireAuthGuardModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [AngularFireAuthGuard]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularFireAuthGuardModule, [{\n    type: NgModule,\n    args: [{\n      providers: [AngularFireAuthGuard]\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularFireAuthGuard, AngularFireAuthGuardModule, canActivate, customClaims, emailVerified, hasCustomClaim, idTokenResult, isNotAnonymous, loggedIn, redirectLoggedInTo, redirectUnauthorizedTo };","map":{"version":3,"names":["i0","Injectable","NgModule","i1","of","pipe","map","take","switchMap","i2","firebase","VERSION","loggedIn","user","AngularFireAuthGuard","constructor","router","auth","canActivate","next","state","authPipeFactory","data","authGuardPipe","can","Array","isArray","createUrlTree","parseUrl","ɵfac","AngularFireAuthGuard_Factory","t","ɵɵinject","Router","AngularFireAuth","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","type","args","isNotAnonymous","isAnonymous","idTokenResult","getIdTokenResult","emailVerified","customClaims","claims","hasCustomClaim","claim","hasOwnProperty","redirectUnauthorizedTo","redirect","redirectLoggedInTo","AngularFireAuthGuardModule","registerVersion","full","AngularFireAuthGuardModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","providers"],"sources":["D:/Gamer`s Orbit/clips/node_modules/@angular/fire/fesm2015/angular-fire-compat-auth-guard.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport * as i1 from '@angular/router';\nimport { of, pipe } from 'rxjs';\nimport { map, take, switchMap } from 'rxjs/operators';\nimport * as i2 from '@angular/fire/compat/auth';\nimport firebase from 'firebase/compat/app';\nimport { VERSION } from '@angular/fire';\n\nconst loggedIn = map(user => !!user);\nclass AngularFireAuthGuard {\n    constructor(router, auth) {\n        this.router = router;\n        this.auth = auth;\n        this.canActivate = (next, state) => {\n            const authPipeFactory = next.data.authGuardPipe || (() => loggedIn);\n            return this.auth.user.pipe(take(1), authPipeFactory(next, state), map(can => {\n                if (typeof can === 'boolean') {\n                    return can;\n                }\n                else if (Array.isArray(can)) {\n                    return this.router.createUrlTree(can);\n                }\n                else {\n                    // TODO(EdricChan03): Add tests\n                    return this.router.parseUrl(can);\n                }\n            }));\n        };\n    }\n}\nAngularFireAuthGuard.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireAuthGuard, deps: [{ token: i1.Router }, { token: i2.AngularFireAuth }], target: i0.ɵɵFactoryTarget.Injectable });\nAngularFireAuthGuard.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireAuthGuard, providedIn: 'any' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireAuthGuard, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'any'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.Router }, { type: i2.AngularFireAuth }]; } });\nconst canActivate = (pipe) => ({\n    canActivate: [AngularFireAuthGuard], data: { authGuardPipe: pipe }\n});\nconst isNotAnonymous = map(user => !!user && !user.isAnonymous);\nconst idTokenResult = switchMap((user) => user ? user.getIdTokenResult() : of(null));\nconst emailVerified = map(user => !!user && user.emailVerified);\nconst customClaims = pipe(idTokenResult, map(idTokenResult => idTokenResult ? idTokenResult.claims : []));\nconst hasCustomClaim = (claim) => pipe(customClaims, map(claims => claims.hasOwnProperty(claim)));\nconst redirectUnauthorizedTo = (redirect) => pipe(loggedIn, map(loggedIn => loggedIn || redirect));\nconst redirectLoggedInTo = (redirect) => pipe(loggedIn, map(loggedIn => loggedIn && redirect || true));\n\nclass AngularFireAuthGuardModule {\n    constructor() {\n        firebase.registerVersion('angularfire', VERSION.full, 'auth-guard-compat');\n    }\n}\nAngularFireAuthGuardModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireAuthGuardModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAngularFireAuthGuardModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireAuthGuardModule });\nAngularFireAuthGuardModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireAuthGuardModule, providers: [AngularFireAuthGuard] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireAuthGuardModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [AngularFireAuthGuard]\n                }]\n        }], ctorParameters: function () { return []; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularFireAuthGuard, AngularFireAuthGuardModule, canActivate, customClaims, emailVerified, hasCustomClaim, idTokenResult, isNotAnonymous, loggedIn, redirectLoggedInTo, redirectUnauthorizedTo };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}