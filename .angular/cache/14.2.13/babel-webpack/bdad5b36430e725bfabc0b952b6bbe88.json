{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"ngx-mask\";\n\nfunction InputComponent_ng_container_1_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 3);\n    i0.ɵɵtext(1, \" Passwords must be at least 8 characters long, have 1 uppercase letter, 1 lowercase letter, and 1 number. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction InputComponent_ng_container_1_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 3);\n    i0.ɵɵtext(1, \" Field is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction InputComponent_ng_container_1_p_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" The value you inputted is \", ctx_r3.control.errors == null ? null : ctx_r3.control.errors.minlength.actualLength, \" characters long. It must be at least \", ctx_r3.control.errors == null ? null : ctx_r3.control.errors.minlength.requiredLength, \" characters long. \");\n  }\n}\n\nfunction InputComponent_ng_container_1_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 3);\n    i0.ɵɵtext(1, \" You must enter a valid email. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction InputComponent_ng_container_1_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 3);\n    i0.ɵɵtext(1, \" Value too low. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction InputComponent_ng_container_1_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 3);\n    i0.ɵɵtext(1, \" Value too high. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction InputComponent_ng_container_1_p_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 3);\n    i0.ɵɵtext(1, \" Passwords do not match. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction InputComponent_ng_container_1_p_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 3);\n    i0.ɵɵtext(1, \" Email taken. Please try another email. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction InputComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, InputComponent_ng_container_1_p_1_Template, 2, 0, \"p\", 2);\n    i0.ɵɵtemplate(2, InputComponent_ng_container_1_p_2_Template, 2, 0, \"p\", 2);\n    i0.ɵɵtemplate(3, InputComponent_ng_container_1_p_3_Template, 2, 2, \"p\", 2);\n    i0.ɵɵtemplate(4, InputComponent_ng_container_1_p_4_Template, 2, 0, \"p\", 2);\n    i0.ɵɵtemplate(5, InputComponent_ng_container_1_p_5_Template, 2, 0, \"p\", 2);\n    i0.ɵɵtemplate(6, InputComponent_ng_container_1_p_6_Template, 2, 0, \"p\", 2);\n    i0.ɵɵtemplate(7, InputComponent_ng_container_1_p_7_Template, 2, 0, \"p\", 2);\n    i0.ɵɵtemplate(8, InputComponent_ng_container_1_p_8_Template, 2, 0, \"p\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.control.errors == null ? null : ctx_r0.control.errors.pattern);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.control.errors == null ? null : ctx_r0.control.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.control.errors == null ? null : ctx_r0.control.errors.minlength);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.control.errors == null ? null : ctx_r0.control.errors.email);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.control.errors == null ? null : ctx_r0.control.errors.min);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.control.errors == null ? null : ctx_r0.control.errors.max);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.control.errors == null ? null : ctx_r0.control.errors.noMatch);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.control.errors == null ? null : ctx_r0.control.errors.emailTaken);\n  }\n}\n\nexport let InputComponent = /*#__PURE__*/(() => {\n  class InputComponent {\n    constructor() {\n      this.control = new FormControl();\n      this.type = 'text';\n      this.placeholder = '';\n      this.format = '';\n    }\n\n    ngOnInit() {}\n\n  }\n\n  InputComponent.ɵfac = function InputComponent_Factory(t) {\n    return new (t || InputComponent)();\n  };\n\n  InputComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InputComponent,\n    selectors: [[\"app-input\"]],\n    inputs: {\n      control: \"control\",\n      type: \"type\",\n      placeholder: \"placeholder\",\n      format: \"format\"\n    },\n    decls: 2,\n    vars: 6,\n    consts: [[1, \"block\", \"w-full\", \"py-1.5\", \"px-3\", \"text-gray-200\", \"border\", \"border-gray-400\", \"transition\", \"duration-500\", \"focus:outline-none\", \"rounded\", \"bg-transparent\", \"focus:border-indigo-400\", 3, \"formControl\", \"type\", \"placeholder\", \"mask\", \"dropSpecialCharacters\"], [4, \"ngIf\"], [\"class\", \"text-red-400\", 4, \"ngIf\"], [1, \"text-red-400\"]],\n    template: function InputComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"input\", 0);\n        i0.ɵɵtemplate(1, InputComponent_ng_container_1_Template, 9, 8, \"ng-container\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formControl\", ctx.control)(\"type\", ctx.type)(\"placeholder\", ctx.placeholder)(\"mask\", ctx.format)(\"dropSpecialCharacters\", false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.control.touched && ctx.control.dirty);\n      }\n    },\n    dependencies: [i1.NgIf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlDirective, i3.MaskDirective]\n  });\n  return InputComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}