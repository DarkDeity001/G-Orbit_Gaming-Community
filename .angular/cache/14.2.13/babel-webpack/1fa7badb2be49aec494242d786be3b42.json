{"ast":null,"code":"import _asyncToGenerator from \"D:/Gamer`s Orbit/clips/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/modal.service\";\nimport * as i2 from \"src/app/services/clip.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../../shared/modal/modal.component\";\nimport * as i5 from \"../../shared/input/input.component\";\nimport * as i6 from \"../../shared/alert/alert.component\";\nimport * as i7 from \"@angular/forms\";\n\nfunction EditComponent_app_alert_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"app-alert\", 9)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"color\", ctx_r0.alertColor);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.alertMsg);\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    \"opacity-50\": a0,\n    \"hover:bg-indigo-700\": a1\n  };\n};\n\nexport let EditComponent = /*#__PURE__*/(() => {\n  class EditComponent {\n    constructor(modal, clipService) {\n      this.modal = modal;\n      this.clipService = clipService;\n      this.activeClip = null;\n      this.inSubmission = false;\n      this.showAlert = false;\n      this.alertColor = 'blue';\n      this.alertMsg = 'Please wait! Updating clip.';\n      this.update = new EventEmitter();\n      this.clipID = new FormControl('', {\n        nonNullable: true\n      });\n      this.title = new FormControl('', {\n        validators: [Validators.required, Validators.minLength(3)],\n        nonNullable: true\n      });\n      this.editForm = new FormGroup({\n        title: this.title,\n        id: this.clipID\n      });\n    }\n\n    ngOnInit() {\n      this.modal.register('editClip');\n    }\n\n    ngOnDestroy() {\n      this.modal.unregister('editClip');\n    }\n\n    ngOnChanges() {\n      if (!this.activeClip) {\n        return;\n      }\n\n      this.inSubmission = false;\n      this.showAlert = false;\n\n      if (this.activeClip.docID !== undefined) {\n        this.clipID.setValue(this.activeClip.docID);\n      }\n\n      this.title.setValue(this.activeClip.title);\n    }\n\n    submit() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        if (!_this.activeClip) {\n          return;\n        }\n\n        _this.inSubmission = true;\n        _this.showAlert = true;\n        _this.alertColor = 'blue';\n        _this.alertMsg = 'Please wait! Updating clip.';\n\n        try {\n          yield _this.clipService.updateClip(_this.clipID.value, _this.title.value);\n        } catch (e) {\n          _this.inSubmission = false;\n          _this.alertColor = 'red';\n          _this.alertMsg = 'Something went wrong. Try again later';\n          return;\n        }\n\n        _this.activeClip.title = _this.title.value;\n\n        _this.update.emit(_this.activeClip);\n\n        _this.inSubmission = false;\n        _this.alertColor = 'green';\n        _this.alertMsg = 'Success!';\n      })();\n    }\n\n  }\n\n  EditComponent.ɵfac = function EditComponent_Factory(t) {\n    return new (t || EditComponent)(i0.ɵɵdirectiveInject(i1.ModalService), i0.ɵɵdirectiveInject(i2.ClipService));\n  };\n\n  EditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditComponent,\n    selectors: [[\"app-edit\"]],\n    inputs: {\n      activeClip: \"activeClip\"\n    },\n    outputs: {\n      update: \"update\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 12,\n    vars: 8,\n    consts: [[\"modalID\", \"editClip\"], [\"heading\", \"\", 1, \"text-2xl\", \"font-bold\"], [3, \"color\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mt-4\"], [1, \"block\", \"text-xl\", \"mb-4\"], [\"placeholder\", \"Enter Title\", 3, \"control\"], [1, \"mt-4\", \"text-right\"], [\"type\", \"submit\", 1, \"inline-flex\", \"justify-center\", \"py-2\", \"px-4\", \"border\", \"border-transparent\", \"shadow-sm\", \"rounded-md\", \"text-white\", \"bg-indigo-600\", \"focus:outline-none\", 3, \"disabled\", \"ngClass\"], [3, \"color\"]],\n    template: function EditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"app-modal\", 0)(1, \"p\", 1);\n        i0.ɵɵtext(2, \"Edit Video\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, EditComponent_app_alert_3_Template, 3, 2, \"app-alert\", 2);\n        i0.ɵɵelementStart(4, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function EditComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"app-input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 7)(10, \"button\", 8);\n        i0.ɵɵtext(11, \" Update \");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.showAlert);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.editForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"control\", ctx.title);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.inSubmission)(\"ngClass\", i0.ɵɵpureFunction2(5, _c0, ctx.inSubmission, !ctx.inSubmission));\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgIf, i4.ModalComponent, i5.InputComponent, i6.AlertComponent, i7.ɵNgNoValidate, i7.NgControlStatusGroup, i7.FormGroupDirective]\n  });\n  return EditComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}